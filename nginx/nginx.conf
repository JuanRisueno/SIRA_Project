# Define el usuario que correrá los procesos de Nginx.
user nginx;
# Define el número de procesos 'worker' (trabajadores). 'auto' lo ajusta a los núcleos de la CPU.
worker_processes auto;

# Fichero donde se guardarán los logs de errores.
error_log /var/log/nginx/error.log warn;
# Fichero donde se guardará el ID del proceso principal de Nginx.
pid       /var/run/nginx.pid;

# Bloque de configuración para los eventos de red.
events {
    worker_connections 1024; # Número máximo de conexiones simultáneas por worker.
}

# Bloque de configuración principal para el tráfico HTTP.
http {
    # Incluye los tipos MIME para que el navegador sepa qué tipo de fichero está recibiendo.
    include       /etc/nginx/mime.types;
    # Define un tipo MIME por defecto si no se reconoce la extensión del fichero.
    default_type  application/octet-stream;

    # Formato de los logs de acceso.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Dónde guardar los logs de acceso.
    access_log  /var/log/nginx/access.log  main;

    # Activa sendfile para una transferencia de ficheros más eficiente.
    sendfile        on;
    # Mantiene las conexiones abiertas para mejorar el rendimiento.
    keepalive_timeout  65;

    # Definición de nuestro servidor virtual.
    server {
        # Nginx escuchará en el puerto 80.
        listen 80;

        # Bloque de configuración para todas las peticiones que lleguen.
        location / {
            # Esto es lo más importante:
            # Redirige todo el tráfico al servicio 'api' en el puerto 8000.
            # 'api' es el nombre que le dimos a nuestro servicio de FastAPI en el docker-compose.yml.
            proxy_pass http://api:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}